#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt {
    require-prior-idle-ms = <350>;
    flavor = "tap-preferred";
    tapping-term-ms = <250>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        Control {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bootloader {
            bindings = <&bootloader>;
            key-positions = <0 1 10 11>;
            layers = <0>;
            require-prior-idle-ms = <900>;
        };

        prtscr {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <0 24>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <37 40>;
        };

        middle_click {
            bindings = <&mkp MCLK>;
            key-positions = <24 25>;
        };

        bacspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <21 22>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE            &kp Q              &kp W             &kp E           &kp R           &kp T  &kp Y  &kp U           &kp I           &kp O             &kp P          &kp LBKT
&mt LEFT_CONTROL TAB  &kp A              &mt LEFT_SHIFT S  &mt LEFT_ALT D  &mt LEFT_GUI F  &kp G  &kp H  &mt LEFT_GUI J  &mt LEFT_ALT K  &mt LEFT_SHIFT L  &kp SEMICOLON  &kp SQT
&mkp LCLK             &kp RIGHT_BRACKET  &kp Z             &kp X           &kp C           &kp V  &kp B  &kp N           &kp M           &kp COMMA         &kp DOT        &kp SLASH
                                                           &mkp RCLK       &kp SPACE       &mo 1  &mo 2  &kp ENTER       &kp BACKSLASH
            >;
        };

        lower_layer {
            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT  &trans  &trans  &trans  &trans  &trans  &trans
&kp TILDE  &kp NUMBER_1     &kp N2       &kp N3    &kp N4      &kp N5       &trans  &trans  &trans  &trans  &trans  &trans
&none      &kp N6           &kp N7       &kp N8    &kp N9      &kp N0       &trans  &trans  &trans  &trans  &trans  &trans
                                         &trans    &trans      &trans       &trans  &trans  &trans
            >;
        };

        rise_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans          &trans  &kp CARET       &kp AMPERSAND   &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS
&trans  &trans  &trans  &trans  &trans          &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW       &trans                 &kp PLUS
&trans  &trans  &trans  &trans  &trans          &trans  &kp LBKT        &kp RBKT        &kp LEFT_BRACE  &kp RIGHT_BRACE       &trans                 &kp KP_EQUAL
                        &trans  &kp UNDERSCORE  &trans  &trans          &trans          &trans
            >;
        };

        control {
            bindings = <
&kp F1      &kp F2  &kp F3         &kp F4         &kp F5         &kp F6         &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&none       &none   &bt BT_DISC 3  &bt BT_DISC 2  &bt BT_DISC 1  &bt BT_DISC 0  &none   &none   &none   &none    &none    &none
&bt BT_CLR  &none   &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0   &none   &none   &none   &none    &none    &none
                                   &none          &none          &none          &none   &none   &none
            >;
        };
    };
};
