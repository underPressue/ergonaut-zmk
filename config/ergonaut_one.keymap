#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt {
    require-prior-idle-ms = <350>;
    flavor = "balanced";
    tapping-term-ms = <250>;
};

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        bootloader {
            bindings = <&bootloader>;
            key-positions = <0 1 10 11>;
            layers = <0>;
            require-prior-idle-ms = <900>;
        };

        prtscr {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <0 24>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <16 15>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20>;
        };

        alt_backspace {
            bindings = <&kp LA(BACKSPACE)>;
            key-positions = <21 20>;
        };

        super_backspce {
            bindings = <&kp LG(BACKSPACE)>;
            key-positions = <22 21>;
        };

        control_layer {
            bindings = <&mo 2>;
            key-positions = <34 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp E    &kp R               &kp T  &kp Y  &kp U               &kp I          &kp O    &kp P          &kp LBKT
&kp LEFT_CONTROL  &kp A  &kp S  &kp D    &kp F               &kp G  &kp H  &kp J               &kp K          &kp L    &kp SEMICOLON  &kp SQT
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C    &kp V               &kp B  &kp N  &kp M               &kp COMMA      &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                                &kp TAB  &mt LEFT_GUI SPACE  &mo 1  &mo 1  &mt LEFT_ALT ENTER  &kp BACKSLASH
            >;
        };

        rise_layer {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN      &kp N7  &kp N8     &kp N9  &kp CARET       &kp AMPERSAND   &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET
&trans  &kp HASH         &kp DOLLAR       &kp N4  &kp N5     &kp N6  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW     &kp RIGHT_ARROW       &kp KP_MINUS           &kp PLUS
&trans  &kp PERCENT      &kp KP_NUMBER_0  &kp N1  &kp N2     &kp N3  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP      &kp END               &trans                 &kp KP_EQUAL
                                          &trans  &kp UNDER  &trans  &trans          &kp LEFT_BRACE  &kp RIGHT_BRACE
            >;
        };

        control {
            bindings = <
&kp F1      &kp F2  &kp F3         &kp F4         &kp F5         &kp F6         &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&none       &none   &bt BT_DISC 3  &bt BT_DISC 2  &bt BT_DISC 1  &bt BT_DISC 0  &none   &none   &none   &none    &none    &none
&bt BT_CLR  &none   &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0   &none   &none   &none   &none    &none    &none
                                   &none          &none          &none          &none   &none   &none
            >;
        };
    };
};
